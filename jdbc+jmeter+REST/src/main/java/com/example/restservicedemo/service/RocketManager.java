package com.example.restservicedemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.restservicedemo.domain.Rocket;

public class RocketManager {
	
	private Connection connection;
	
	private static final String URL = "jdbc:hsqldb:hsql://localhost/workdb";
	private static final String CREATE_TABLE_ROCKET = "CREATE TABLE Rocket(id bigint GENERATED BY DEFAULT AS IDENTITY, mark varchar(20), model varchar(20), price integer)";

	private PreparedStatement addRocketsStmt;
	private PreparedStatement deleteAllRocketsStmt;
	private PreparedStatement getAllRocketsStmt;
	private PreparedStatement getRocketByIdStmt;
	private PreparedStatement deleteRocketStmt;
	private PreparedStatement updateRocketStmt;
	private PreparedStatement getRocketByMarkStmt;
	
	private Statement statement;
	
	public RocketManager() {
		try {
			connection = DriverManager.getConnection(URL);
			statement = connection.createStatement();
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			
			while (rs.next()) {
				if ("Rocket".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}
			
			if (!tableExists)
				statement.executeUpdate(CREATE_TABLE_ROCKET);

			addRocketsStmt = connection
					.prepareStatement("INSERT INTO Rocket (id, mark, model, price) VALUES (?, ?, ?, ?)");
			deleteAllRocketsStmt = connection
					.prepareStatement("DELETE FROM Rocket");
			getAllRocketsStmt = connection
					.prepareStatement("SELECT id, mark, model, price FROM Rocket");
			getRocketByIdStmt = connection
					.prepareStatement("SELECT id, mark, model, price FROM Rocket where id = ?");
			getRocketByMarkStmt = connection
					.prepareStatement("SELECT mark, model FROM Rocket where mark = ?");
			deleteRocketStmt = connection
					.prepareStatement("DELETE FROM Rocket WHERE id = ?");
			updateRocketStmt = connection
					.prepareStatement("UPDATE Rocket SET mark = ?, model = ?,price = ?  WHERE id = ?");
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	Connection getConnnection() {
		return connection;
	}
	
	public void clearRockets() {
		try {
			deleteAllRocketsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public int addRocket(Rocket rocket) {
		int count = 0;
		
		try {
			addRocketsStmt.setLong(1, rocket.getId());
			addRocketsStmt.setString(2, rocket.getMark());
			addRocketsStmt.setString(3, rocket.getModel());
			addRocketsStmt.setInt(4, rocket.getPrice());
			
			count = addRocketsStmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public int deleteRocketId(Rocket rocket){
		int count = 0;
		try {
			deleteRocketStmt.setLong(1, rocket.getId());
			
			count = deleteRocketStmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	
	public int updateRocket(Rocket rocket, String mark,String model, int price){
		int count = 0;
		try{
			updateRocketStmt.setString(1, mark);
			updateRocketStmt.setString(2, model);
			updateRocketStmt.setInt(3, price);
			updateRocketStmt.setLong(4, rocket.getId());
			count = updateRocketStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public List<Rocket> getAllRockets() {
		List<Rocket> rockets = new ArrayList<Rocket>();
		
		try {
			ResultSet rs = getAllRocketsStmt.executeQuery();
			
			while (rs.next()) {
				Rocket r = new Rocket();
				r.setId(rs.getInt("id"));
				r.setMark(rs.getString("mark"));
				r.setModel(rs.getString("model"));
				r.setPrice(rs.getInt("price"));
				rockets.add(r);
			}
 		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return rockets;
	}
	
	public Rocket getRocket(Long id) {
		Rocket r = new Rocket();
		
		try {
			getRocketByIdStmt.setLong(1, id);
			ResultSet rs = getRocketByIdStmt.executeQuery();
			
			while (rs.next()) {
				r.setId(rs.getInt("id"));
				r.setMark(rs.getString("mark"));
				r.setModel(rs.getString("model"));
				r.setPrice(rs.getInt("price"));
				break;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return r;
	}
	
	public List<Rocket> getRocketByMark(String mark) {
		List<Rocket> rockets = new ArrayList<Rocket>();
		try {
			getRocketByMarkStmt.setString(1, mark);
			ResultSet rs = getAllRocketsStmt.executeQuery();

			while (rs.next()) {
				Rocket r = new Rocket();
				r.setId(rs.getInt("id"));
				r.setMark(rs.getString("mark"));
				r.setModel(rs.getString("model"));
				r.setPrice(rs.getInt("price"));
				rockets.add(r);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return rockets;
	}
	
}